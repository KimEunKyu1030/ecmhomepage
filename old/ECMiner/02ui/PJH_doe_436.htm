<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ks_c_5601-1987">
		<link href="../default.css" type="text/css" rel="stylesheet">
		<script type="text/javascript" src="../default.js"></script>
	</head>
	
	<body class="bdstyle" onload="onBodyLoad();" onmousedown="onBodyMouseDown();">
	  <!-- Page Title -->
	  <div id="areafixed" class="bdstyleTitle">
	    <div class="title">바람직성 함수 (Desirability Function)
    		<div class="version"></div>
    	</div>
    <hr class="headerLine">
  	</div>
    <!-- Page Title -->
    
    
    <!-- Begin Client Area -->
    <div id="areascroll" class="bdstyleBody">

	

	<p>	하나의 반응열(column)에 대해서 하나의 desirability function이 존재하는데 반응열이 하나일 경우는 이 하나의 desirability function 을 최적화하는 요인들의 수준 조합을 찾으면 됩니다. 만약에 반응열이 여러 개이고 여러 개의 반응열을 모두 고려한 최적 요인 수준 조합을 찾고 싶으면 여러 개의 desirability function을 모두 고려한 하나의 composite desirability function을 만들어서 그것을 최적화하면 됩니다. 반응열이 m개이고 그것에 대한 desirability function이 각각 d1,d2,..,dm라고 하고, 각각의 반응열에 대한 중요도(importance)가 각각 r1,r2,..,rm이라고 하면 그것을 모두 고려한 composite desirability function 은 </p>
	<br><p style="margin-left:50"><img src="../images/doe_436_01.gif"></p><br>

	<p>이 됩니다. <br>  그런데 각각의 di는 요인들 x1,x2,…의 함수이고 그렇기 때문에 D 또한  x1,x2,…의 함수라고 할 수 있습니다. 최종 목표는 D를 최대화하는  x1,x2,…의 조합을 찾는 것이라고 할 수 있습니다.</p><br>



	<ul class="liType02">
		<li><b>최소화</b></li>
		<p>위에서 설명하였듯이 하나의 반응열에는 하나의 desirability function이 대응됩니다. 반응을 최소화 하고 싶든, 최대화하고 싶든, 혹은 목표 값에 적중시키고 싶든 이 desirability function을 최대화하는 것이 목적임은 물론입니다. 따라서 desirability function은 사용자가 원하는 최적화의 종류에 따라 달라야 할 것입니다. 최소화를 선택하였을 때는 상한과 목표 값을 설정할 수 있습니다. 상한을 U, 목표 값을 T라고 했을 때 최소화에서의 desirability function은 </p>
		<br><p style="margin-left:50"><img src="../images/doe_436_02.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_03.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_04.gif"></p><br>
		<p>입니다. 여기서 λ는 가중치입니다.</p>
	
		<li><b>최대화</b></li>
		<p>최대화를 선택하였을 때는 하한과 목표 값을 선택할 수 있습니다. 하한을 L, 목표 값을 T라고 했을 때 최대화에서의 desirability function은</p>
		<br><p style="margin-left:50"><img src="../images/doe_436_05.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_06.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_07.gif"></p><br>
		<p>입니다. 여기서 λ는 가중치입니다.</p>

		<li><b>목표 값 적중</b></li>
		<p>목표 값 적중을 선택하였을 때는 상한과 하한 및 목표 값을 선택할 수 있습니다. 하한을 L, 상한을 U, 목표 값을 T라고 하였을 때</p>
		<br><p style="margin-left:50"><img src="../images/doe_436_08.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_06.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_09.gif"></p>
		<p style="margin-left:50"><img src="../images/doe_436_10.gif"></p><br>
		<p>입니다. 여기서 λ는 가중치입니다.</p>
	</ul>

	<br>
	<p>위에서 공통적으로 나타나는 y는 Regression Model을 통해서 만든 회귀식입니다. 따라서 </p>
	<br><p style="margin-left:50"><img src="../images/doe_436_11.gif"></p><br>
	<p>이고, 그러므로 d또한 x1,x2,…의 함수가 됩니다. 이를 통해 각각의 d를 구할 수 있고 여기에 가중치를 고려하여 계산하면 Composite Desirability Function을 구할 수 있습니다. 이 과정을 종합하면 다음과 같습니다.</p>
	<br><p style="margin-left:50"><img src="../images/doe_436_12.jpg"></p><br>

	<p>이제 최적화 알고리즘을 도입하여 이 Composite Desirability Function을 최대화해야 합니다. 이 Composite Desirability Function은 사용자가 흔히 접하는 함수의 모양과 다릅니다. 많은 점에서 미분이 불가능하고 따라서Derivative Based Optimization Algorithm을 쓸 수가 없습니다. ECMiner DOE에서는 Box. M.J의 Constrained Simplex Algorithm을 사용합니다. 이 알고리즘을 통해서 Composite Desirability Function 을 최대화 할 수 있습니다.</p>




			<hr class="footerLine">
			<p class="footer">
		</div>
	</body>
</html>
