<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ks_c_5601-1987">
		<link href="./default.css" type="text/css" rel="stylesheet">
		<script type="text/javascript" src="./default.js"></script>
	</head>
	
	<body class="bdstyle" onload="onBodyLoad();" onmousedown="onBodyMouseDown();">
	  <!-- Page Title -->
	  <div id="areafixed" class="bdstyleTitle">
	    <div class="title">MLP
	    <div class="version"></div>
	    </div>
	    <hr class="headerLine">
  	</div>
    <!-- Page Title -->
    
    
    <!-- Begin Client Area -->
    <div id="areascroll" class="bdstyleBody">
	    <p>
    	<div class="node"><img src="./files/MLP.files/image002.jpg"></div>
    	<div class="nodeexplain">
			인간 두뇌의 신경망을 흉내낸 모델링 기법으로 실제 자신이 가진 데이터를 이용한 반복적인 학습과정을 거쳐 데이터에 숨어있는 패턴을 찾아냅니다.
    	</div>
    	<div style="clear: both;"></div>

    </p>
    
    <hr class="nodeLine">
    
    <a href="#개요">개요</a>,
    <a href="#고려사항">고려사항</a>,
    <a href="#사용법">사용법</a>,
    <a href="#속성">속성</a>,
    <a href="#결과">결과</a>
		
	
    <a name="개요"><h3>개요</h3></a>

    <ul class="liType02">
  		<li>Multilayer feedforward network의 구조는 크게 input layer, hidden layer, output layer로 이뤄져 있습니다. 이때, input signal은 layer-by-layer로 전진해 나갑니다. 이러한 신경망을 <span class="genExHighlight">MLP(Multi-Layer Perceptron)</span>이라고 합니다. <span class="genExHighlight">Function approximation, Pattern classification</span>에 널리 이용되는 MLP는 RBF, SVM 등과 함께 대표적인 <span class="genExHighlight">Supervised neural network</span>입니다. 각 layer의 neuron(or node)들은 bias와 다른 layer의 neuron들과 adjustable weight에 의해 연결되어 있습니다. 아래 그림은 hidden layer가 2개인 MLP의 구조를 나타낸 것입니다. 
		</li>
		<br><p><img src="./files/MLP.files/image003.jpg"></p><br>
		<li>이러한 MLP의 weight를 learning하는 대표적인 algorithm이 Error back-propagationAlgorithm (EBP)입니다. EBP는 다음과 같은 2단계로 구성되어 있습니다.</li>
  		<ol class="liType02">
  			<li>Forward pass<br>
				MLP의 input layer에 input pattern이 입력되면 forward 방향으로 input, hidden layer를 거치면서 최종적으로 output layer를 통해 output의 추정치인 network의 response가 구해집니다. Forward pass 동안은 network의 output만 구해지고 weight는 고정되어 있습니다. 
			</li>
  			<li>Backward pass<br>
				Error correction rule(back propagation algorithm)에 의해 backward 방향 으로 weight가 update됩니다. weight는 network의 actual response가 좀더 desired response에 가까워 지도록 update됩니다.
			</li>
  		</ol>
  	</ul>

  	
  	<a name="고려사항"><h3>고려사항</h3></a>
    <ul class="liType02">
  		<li>MLP노드 자체가 종속변수의 데이터 타입에 맞는 수행기법을 선택해 종속변수가 연속형일 때는 예측분석을 이산형일 때는 <span class="genExHighlight">분류분석</span>을 수행합니다.</li>
  	</ul>
  	
  	<a name="사용법"><h3>사용법</h3></a>
    <ul class="liType02">
  		<li><span class="genExHighlight">입력노드</span>를 통해 데이터를 읽어들입니다.</li>
  		<li><span class="genExHighlight">형태 변경 노드</span>를 통해 읽어들인 데이터의 타입을 지정합니다.(<span class="genExHighlight">독립변수, 종속변수</span>를 지정)</li>
  		<li><span class="genExHighlight">MLP 노드</span>를 <span class="genExHighlight">형태 변경 노드</span>에 연결하고 옵션들을 선택합니다.</li>
  		<li><span class="genExHighlight">화면표시 노드</span>를 <span class="genExHighlight">MLP 노드</span>에 연결합니다. </li>
		<li><span class="genExHighlight">MLP diagram</span> 예시는 아래와 같습니다.</li>
  		<p>			
    	<img src="./files/MLP.files/image005.jpg">
  		</p>
  	</ul>
			
		
    <a name="속성"><h3>속성</h3></a>
		<table class="tbStyle01">
			<thead>
				<tr>
					<th width="60">속성그룹</th>
					<th width="100">속성명</th>
					<th width="">설명</th>
					<th width="100">기타</th>
					<th width="60">비고</th>
				</tr>
			</thead>
			
				<tr>
					<th rowspan="2">일반정보</th>
					<td>이름</td>
					<td>노드의 이름을 입력합니다.</td>
					<td>선택</td>
					<td></td>
				</tr>
				<tr>
					<td>설명</td>
					<td>노드에 대한 간단한 주석을 달 수 있습니다.</td>
					<td>선택</td>
					<td></td>
				</tr>
				<tr>
					<th rowspan="2">모델파일</th>
					<td>모델파일 생성</td>
					<td>모델링 후에 모델 파일을 생성할지의 여부를 선택합니다.</td>
					<td>필수</td>
					<td>예, 아니오</td>
				</tr>
				<tr>
					<td>모델파일 경로</td>
					<td>모델 파일을 생성할시 저장할 모델 파일의 경로를 선택합니다.</td>
					<td>조건부 필수</td>
					<td></td>
				</tr>
				<tr>
					<th rowspan="20">선택사항</th>
					<td>Optimizing Method</td>
					<td>목적함수를 최적화할 Numerical Method를 선택합니다. Steepest Descent와 Conjugate Gradient, Levenberg Marquardt를 선택할 수 있습니다.</td>
					<td>필수</td>
					<td>Steepest Descent. Conjugate Gradient. Levenberg Marquardt. </td>
				</tr>
				<tr>
					<td>은닉층수</td>
					<td>은닉층수를 선택합니다.</td>
					<td>필수</td>
					<td>1,2</td>
				</tr>
				<tr>
					<td>은닉1층노드수</td>
					<td>은닉층의 노드수를 입력합니다.</td>
					<td>필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>은닉2층노드수</td>
					<td>은닉층의 노드수를 입력합니다.</td>
					<td>필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>은닉1층 활성함수</td>
					<td>첫번째 은닉층의 활성함수를 지정합니다.</td>
					<td>필수</td>
					<td>Linear, TanSig, LogSig</td>
				</tr>
				<tr>
					<td>출력1층 활성함수</td>
					<td>출력층의 활성함수를 지정합니다.</td>
					<td>필수</td>
					<td>Linear, TanSig, LogSig</td>
				</tr>
				<tr>
					<td>은닉2층 활성함수</td>
					<td>두번째 은닉층의 활성함수를 지정합니다.</td>
					<td>필수</td>
					<td>Linear, TanSig, LogSig</td>
				</tr>
				<tr>
					<td>모멘텀</td>
					<td>최적화 문제에서 어떤iteration에서의  gradient방향에 이전 단계의 방향을 반영하는 정도를 나타내는 것입니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>학습률</td>
					<td>Weight를 구할 때 step length를 말합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>시행수</td>
					<td>Algorithm이 수렴하지 않을 경우의 최대 반복수를 입력합니다.</td>
					<td>필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>최종목표에러</td>
					<td>Algorithm이 수렴하기 위한 actual response와 desired response 사이의 에러로 이 목표에러에 도달하면 iteration을 중지합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>Epsilon 1</td>
					<td>Epsilon 1을 입력합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>Epsilon 2</td>
					<td>Epsilon 2를 입력합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>구조 최적화 여부</td>
					<td>분할 노드를 앞에 연결하였을 때 구조최적화를 할 수 있는데 이를 시행할지의 여부를 선택합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>첫번째 은닉층에서의 시작노드 수</td>
					<td>구조 최적화시 MLP Network의 첫번째 은닉층에서 시작 노드 수를 설정합니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>첫번째 은닉층에서의 증가노드 수</td>
					<td>구조 최적화시 MLP Network의 첫번째 은닉층에서 증가 노드 수를 설정합니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>첫번째 은닉층에서의 Test경우 수</td>
					<td>구조 최적화시 MLP Network의 첫번째 은닉층에서 Test경우 수를 설정합니다. 예를 들어 시작 노드 수 1, 증가 노드 수 2, Test 경우의 수 4이면 1, 3, 5, 7인 케이스에 대해서 Test합니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>두번째 은닉층에서의 시작노드 수</td>
					<td>구조 최적화시 MLP Network의 두번째 은닉층에서 시작 노드 수를 설정합니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>두번째 은닉층에서의 증가노드 수</td>
					<td>구조 최적화시 MLP Network의 두번째 은닉층에서 증가 노드 수를 설정합니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>두번째 은닉층에서의 Test경우 수</td>
					<td>구조 최적화시 MLP Network의 두번째 은닉층에서 증가 노드 수를 설정합니다. 예를 들어 시작 노드 수 1, 증가 노드 수 2, Test 경우의 수 4이면 1, 3, 5, 7인 케이스에 대해서 Test합니다. 만약 첫번 째 은닉층에서의 Test 수가 4이고 두번 째 은닉층에서의 Test수가 5이면 총 20가지 경우에 대해서 Test를 하게 되는 것입니다.</td>
					<td>구조 최적화시 필수</td>
					<td>자연수</td>
				</tr>				
				
		</table>

		<a name="결과"><h3>결과</h3></a>
        <ul class="liType02">
  		<li><span class="genExHighlight">화면표시 노드</span>에서 분석 결과를 확인할 수 있습니다. 아래는 분류분석의 예시입니다.</li>
  		<p>			
    	<img src="./files/MLP.files/image009.jpg">
  		</p>
  	</ul>
		
		<hr class="footerLine">
		<p class="footer">
	</div>
	</body>
</html>
