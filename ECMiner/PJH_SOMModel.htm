<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ks_c_5601-1987">
		<link href="./default.css" type="text/css" rel="stylesheet">
		<script type="text/javascript" src="./default.js"></script>
	</head>
	
	<body class="bdstyle" onload="onBodyLoad();" onmousedown="onBodyMouseDown();">
	  <!-- Page Title -->
	  <div id="areafixed" class="bdstyleTitle">
	    <div class="title">SOM
	    <div class="version"></div>
	    </div>
	    <hr class="headerLine">
  	</div>
    <!-- Page Title -->
    
    
    <!-- Begin Client Area -->
    <div id="areascroll" class="bdstyleBody">
	    <p>
    	<div class="node"><img src="./files/SOMModel.files/image002.jpg"></div>
    	<div class="nodeexplain">
    		<span class="nodeExHighlight">SOM신경망</span>은 경쟁층이 한 층만 있으며, 이를 통해 고차원 데이터를 저차원으로  시각화하여 볼 수 있습니다.
    		</div>
    	<div style="clear: both;"></div>

    </p>
    
    <hr class="nodeLine">
    
    <a href="#개요">개요</a>,
    <a href="#고려사항">고려사항</a>,
    <a href="#사용법">사용법</a>,
    <a href="#속성">속성</a>,
    <a href="#결과">결과</a>
		
	
    <h3><a name="개요">개요</a></h3>
    <ul class="liType02">
    	<li>Self Organizing Map(혹은 Self Organizing Feature Map)은 대뇌 피질의 시각피질을 모델화한 인공신경망의 일종입니다. 이는 비교사 학습( unsupervised learning)의 일종으로 클러스터링 방법의 하나임과 동시에 차원을 줄여서 데이터를 가시화하는 방법 중의 하나입니다.</li>
			<li>인공신경망의 일종인 자기 조직화 지도는 자율학습의 방법으로 훈련되며 저차원(보통 2차원)의 지도를 생성합니다. 이 지도는 입력 공간에서 주어진 훈련 샘플에 대한 이산적인 표현을 나타내며 입력 공간에 대한 위상 속성을 보존하려고 합니다.</li>
			<li>SOM은 고차원으로 표현된 데이터를 저차원으로 변환해서 보는데 유용합니다. 이 모델은 이 모델을 처음 고안한 핀란드 과학자인 Teuvo Kohonen의 이름을 본따 Kohonen map이라고 불리기도 합니다. 다른 인공신경망과 같이, SOM은 훈련과 매핑의 두가지 모드로 동작합니다. 훈련은 입력 샘플을 이용해서 지도를 만드는 과정으로, 경쟁적이며, vector quantization이라고 불립니다. 매핑 과정에서는 새로운 입력을 훈련 결과에 따라 자동적으로 분류합니다.</li>
		</ul>

    
  	<h3><a name="고려사항">고려사항</a></h3>
    <ul class="liType02">
  		<li><span class="genExHighlight">독립변수</span>만 입력되어야 하며 연속형이어야 합니다.</li>
  		<li><span class="genExHighlight">SOM노드</span> 자체에 표준화 전처리 과정을 포함하고 있습니다.</li>
  	</ul>
  	
  	<h3><a name="사용법">사용법</a></h3>
    <ul class="liType02">
			<li><span class="genExHighlight">입력노드</span>를 통해 데이터를 읽어들입니다.</li>
			<li><span class="genExHighlight">SOM노드</span>를 <span class="genExHighlight">입력노드</span>에 연결하고 옵션들을 선택합니다.</li>
			<li><span class="genExHighlight">SOM diagram</span> 예시는 아래와 같습니다.</li>
  		<p>			
    	<img src="./files/SOMModel.files/image004.jpg">
  		</p>
  	</ul>
			
		
    <h3><a name="속성">속성</a></h3>
		<table class="tbStyle01">
			<thead>
				<tr>
					<th width="60">속성그룹</th>
					<th width="">속성명</th>
					<th width="">설명</th>
					<th width="40">기타</th>
					<th width="">비고</th>
				</tr>
			</thead>
			
			
				<tr>
					<th rowspan="2">일반정보</th>
					<td>이름</td>
					<td>노드의 이름을 입력합니다.</td>
					<td>선택</td>
					<td></td>
				</tr>
				<tr>
					<td>설명</td>
					<td>노드에 대한 간단한 주석을 달 수 있습니다.</td>
					<td>선택</td>
					<td></td>
				</tr>
				
				<tr>
					<th rowspan="2">모델파일</th>
					<td>모델파일 생성</td>
					<td>모델링 후에 모델 파일을 생성할지의 여부를 선택합니다.</td>
					<td>필수</td>
					<td>예, 아니오</td>
				</tr>
				<tr>
					<td>모델파일 경로</td>
					<td>모델 파일을 생성할시 저장할 모델 파일의 경로를 선택합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				
				<tr>
					<th rowspan="7">선택사항</th>
					<td>결과보기</td>
					<td>모델링 후 Class Chart를 보여줍니다.</td>
					<td>필수</td>
					<td>모델링 후 클릭</td>
				</tr>
				<tr>
					<td>가로방향 격자수</td>
					<td>Topology의 가로 방향 격자수를 입력합니다.</td>
					<td>필수</td>
					<td>자연수</td>
				</tr>
				<tr>
					<td>세로뱡향 격자수</td>
					<td>Topology 의 세로 방향 격자수를 입력합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>최대 반복수</td>
					<td>알고리즘의 최대 반복수를 입력합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>Topology 선택</td>
					<td>사용할 수 있는 Topology는 두가지가 있습니다. Hexagonal과 Grid 중 하나의 Topology를 선택하도록 합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>학습률 초기값</td>
					<td>알고리즘이 반복되면서 학습률은 지속적으로 작아집니다. Training이 시작될 때 사용하는 학습률의 값을 입력하도록 합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>
				<tr>
					<td>이웃 반경 초기값</td>
					<td>알고리즘이 반복되면서 이웃 반경의 값은 지속적으로 작아집니다. Training이 시작될 때 사용하는 이웃 반경의 값을 입력하도록 합니다.</td>
					<td>필수</td>
					<td></td>
				</tr>

				
		</table>
		<br>		
		SOM 을 실행할 때에는 Training 과정을 시각적, 동적으로 보여줍니다. 이를 통해서 사용자는 Training의 과정을 통해 Topology가 어떻게 변하는지를 생생하게 볼 수 있습니다.
		<br>
		<p>			
    	<img src="./files/SOMModel.files/image006.jpg">
  	</p>


		<h3><a name="결과">결과</a></h3>
		<ul class="liType02">
			<li>분석결과정보</li><br>
			<span class="genExHighlight">화면표시 노드</span>에서 분석 결과를 확인할 수 있습니다. 결과로 각 데이터가 어떤 class에 해당하는지를 볼 수 있습니다.
  		<p>			
    	<img src="./files/SOMModel.files/image008.jpg">
  		</p>
  		<li>분석을 실행한 Diagram 상에서 PCA 노드를 클릭해서 노드 속성창의  버튼을 누르면 다음 결과들이 출력됩니다.</li>
	  		<ol class="liType02">
		  		<li>SOM Weight Position Chart</li><br>
		  		본 Chart를 통해서 Weight가 공간상에 어떻게 배치되어 있는지와 각 Weight간 어떠한 연결관계가 있는지를 알 수 있습니다.
		  		<p>			
    				<img src="./files/SOMModel.files/image012.jpg">
  				</p>
		  		<li>SOM Topology Structure Chart</li><br>
		  		본 Chart를 통해서 Topology의 Structure를 시각적으로 볼 수 있습니다. 아래의 예시는 Hexagonal Structure를 시각화한 것입니다.
		  		<p>			
    				<img src="./files/SOMModel.files/image014.jpg">
  				</p>
		  		<li>SOM Hit Chart</li><br>
		  		본 Chart를 통해서 각 Weight당 가장 가까운 데이터가 몇 개씩 있는지를 시각적으로 확인할 수 있습니다.
		  		<p>			
    				<img src="./files/SOMModel.files/image016.jpg">
  				</p>
		  		<li>SOM Weight Plane Chart</li><br>
		  		본 Chart를 통해서 각 Weight의 성분의 값을 시각적으로 알 수 있습니다. Weight 1이라는 것은 Weight Vector의 첫번째 성분을 나타냅니다.  Topology 상에서 각 Weight의 성분(여기서는 첫번째 성분)의 값이 클수록 밝은 색이 되고 작을수록 짙은 색이 됩니다. ECMiner SOM에서는 빨강색을 기준으로 Weight의 성분 값이 0보다 크면 노란색에 가까워지고, 0보다 작으면 검은색에 가까워지도록 하였습니다.
		  		<p>			
    				<img src="./files/SOMModel.files/image018.jpg">
  				</p>
		  		<li>SOM Statistics</li><br>
		  		본 Statistics를 통하여 Topology상에 위치한 Weight Vector의 성분 값을 구체적으로  알 수 있고 화면표시에서 나타나는 SOM_YHAT이 나타내는 숫자에 해당하는 가로, 세로 격자 순서를 알 수 있습니다.
		  		<p>			
    				<img src="./files/SOMModel.files/image020.jpg">
  				</p>
	  		</ol>
  	</ul>
    
    
    
    
		
		</table>
		
		<hr class="footerLine">
		<p class="footer">
	</div>
	</body>
</html>
