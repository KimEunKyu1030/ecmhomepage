<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ks_c_5601-1987">
		<link href="./default.css" type="text/css" rel="stylesheet">
		<script type="text/javascript" src="./default.js"></script>
	</head>
	
	<body class="bdstyle" onload="onBodyLoad();" onmousedown="onBodyMouseDown();">
	  <!-- Page Title -->
	  <div id="areafixed" class="bdstyleTitle">
	    <div class="title">텍스트함수
    		<div class="version"></div>
    	</div>
    <hr class="headerLine">
  	</div>
    <!-- Page Title -->
    
    
    <!-- Begin Client Area -->
    <div id="areascroll" class="bdstyleBody">
    	
    	<li>예시에 표현되는 결과값 형태는 함수 적용 결과 데이터 형태가 문자형일 경우 "결과값"의 형태로, 날짜형일 경우 #결과값#의 형태로 표현됩니다.(실제로 화면상에 표현되는 값은 ",#을 제외한 숫자/문자만 표현됩니다.)</li>
    	<table class="tbStyle01">
				<thead>
					<tr>
						<th width="">함수</th>
						<th width="">인수</th>
						<th width="">설명</th>
						<th width="">예</th>
					</tr>
				</thead>
					<tr>
						<td>ALLTRIM(text1[, text2]) </td>
						<td>text1: 문자열<br> text2: 제거할 문자열<br></td>
						<td>text1에 있는 text2의 문자열을 모두 제거합니다. text2가 입력되지 않으면 공백을 제거합니다.</td>
						<td>ALLTRIM("AABACD", "A") -> "BCD"</td>
					</tr>
					<tr>
						<td>CHRTRAN(text1, text2, text3) </td>
						<td>text1: 문자열<br>
						text2: 문자열<br>
						text3: 문자열
						</td>
						<td>문자열(text1)에서 text2을 찾아 text3로 변환합니다.  </td>
						<td>CHRTRAN("BBACD", "A", "C" ) -> "BBCCD" </td>
					</tr>
					<tr>
						<td>FIND(text1, text2[, num]) </td>
						<td>text1: 문자열<br>
						text2: 문자열<br>
						num: 회수 </td>
						<td>text1에서 text2을 num만큼 찾은 문자의 시작 위치를 반환합니다. num이 입력되니 않으면 1로 간주됩니다. 문자열의 시작 위치는 1입니다.   </td>
						<td>FIND("ABBACDAB", "A", 2) -> 4 </td>
					</tr>
					<tr>
						<td>KOR_GET1(text) </td>
						<td>text: 문자열</td>
						<td>text에서 한글을 추출합니다. </td>
						<td>KOR_GET1(“ABCㄱㄴㄷ”) -> ”ㄱㄴㄷ”</td>
					</tr>
					<tr>
						<td>KOR_GET2(text,num1[,num2]) </td>
						<td>text: 문자열, num1,2 : 임의값</td>
						<td>text중 num1번째 문자열부터 num2번째 문자열을 잘라 한글문자만 반환합니다. num2가 없으면 num1부터 끝까지 문자열을 잘라 반환합니다.</td>
						<td>KOR_GET2("가나다ab라마",2,6) -> "나다라마"</td>
					</tr>
					<tr>
						<td>LEFT(text, num) </td>
						<td>text: 문자열<br>
						num: 숫자 </td>
						<td>문자열(text )의 왼쪽부터 num만큼의 문자열을 잘라 반환합니다.  </td>
						<td>LEFT("ABBACDAB", 3)-> "ABB" </td>
					</tr>
					<tr>
						<td>LEN(text) </td>
						<td>text: 문자열 </td>
						<td>문자열의 문자수를 반환합니다.</td>
						<td>LEN("ABBACDAB") -> 8 </td>
					</tr>
					<tr>
						<td>LIKE(text1, text2) </td>
						<td>text1: 문자열<br>
						text2: 문자열  </td>
						<td>text1이 text2와 비슷하면 TRUE를 반환합니다. 와일드 문자 *, ?를 사용할 수 있으며, ?는 한 문자, *는 여러 문자를 대변합니다.   </td>
						<td>LIKE("ABBACDAB", "*CD") -> TRUE  </td>
					</tr>
					<tr>
						<td>LOWER(text) </td>
						<td>text: 문자열</td>
						<td>text를 소문자로 변환합니다.   </td>
						<td>LOWER("AbCD") -> "abcd" </td>
					</tr>
					<tr>
						<td>LTRIM(text1[, text2]) </td>
						<td>text1: 문자열<br>
						text2: 제거할 문자열 </td>
						<td>text1에서 왼쪽에 있는 text2를 제거합니다. text2가 입력되지 않으면 공백을 제거합니다.   </td>
						<td>LTRIM("AABACD", "A") -> "BACD"  </td>
					</tr>
					<tr>
						<td>OCCURS(text1, text2) </td>
						<td>text1: 문자열 <br>
						text2: 문자열 </td>
						<td>text1 중에 text2가 몇 회 있는지 계산합니다.  </td>
						<td>OCCURS("AABACD", "A") -> 3  </td>
					</tr>
					<tr>
						<td>REPT(text1, num) </td>
						<td>text1: 문자열 <br> num: 숫자 </td>
						<td>text1을 num만큼 반복하여 새로운 문자열을 만듭니다.   </td>
						<td>REPT("A", 3) -> "AAA"  </td>
					</tr>
					<tr>
						<td>RIGHT(text1, num) </td>
						<td>text1: 문자열 <br>
						num: 숫자 </td>
						<td>text1의 오른쪽에서 num만큼의 문자열을 잘라 반환합니다.   </td>
						<td>RIGHT("AABACD", 2) -> "CD"  </td>
					</tr>
					<tr>
						<td>RTRIM(text1 [, text2]) </td>
						<td>text1: 문자열 <br>
						text2: 제거할 문자열 </td>
						<td>text1에서 오른쪽에 있는 text2를 제거하여 반환합니다. text2가 입력되지 않으면 공백을 제거합니다.   </td>
						<td>RTRIM("DCABAA", A") -> "DCAB" </td>
					</tr>
					<tr>
						<td>SPACE(num) </td>
						<td>num: 숫자 </td>
						<td>num만큼 공백을 반복한 문자열을 반환합니다. REPT(" ", num)와 같습니다.  </td>
						<td>SPACE(3) -> "   "</td>
					</tr>
					<tr>
						<td>STRSORT(text) </td>
						<td>text: 문자열 </td>
						<td>text를 정렬합니다. </td>
						<td>STRSORT("adbc") -> "abcd"</td>
					</tr>
					<tr>
						<td>SUBSTR(text, num1 [,num2]) </td>
						<td>text: 문자열 <br>
						num1: 시작 위치<br>
						num2: 길이 </td>
						<td>문자열(text) 중 num1부터 num2만큼의 크기를 잘라 반환합니다. num2가 입력되 않으면 num1부터 끝까지 문자열을 잘라 반환합니다.  </td>
						<td>SUBSTR("AABACD", 2, 3) -> "ABA"  </td>
					</tr>
					<tr>
						<td>TRIM(text1 [,text2]) </td>
						<td>text1: 문자열 <br>
						text2: 문자열 </td>
						<td>text1에서 양쪽 끝에 있는 text2를 제거합니다. text2가 입력되지 않으면 공백을 제거합니다.   </td>
						<td>TRIM("AABACDA", "A") -> "BACD"  </td>
					</tr>
					<tr>
						<td>UPPER(text) </td>
						<td>text1: 문자열<br>
						text2: 문자열  </td>
						<td>text를 대문자로 변환합니다.  </td>
						<td>UPPER("aaBAcD") -> "AABACD"    </td>
					</tr>
					<tr>
						<td>UTF8(text) </td>
						<td>text: 문자열(유니코드 형태)</td>
						<td>text를 UTF8로 decode합니다.(url해석용) </td>
						<td>UTF8("%EB%B9%B5") -> "빵"    </td>
					</tr>
			</table>
    	
			
			<hr class="footerLine">
			<p class="footer">
		</div>
	</body>
</html>
